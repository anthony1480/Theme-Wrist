{% doc %}
  @prompt
    i need to add product recommendation in my add to cart drawer
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-cart-recommendations-{{ ai_gen_id }} {
    padding: {{ block.settings.spacing_top }}px 0 {{ block.settings.spacing_bottom }}px;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
  }

  .ai-cart-recommendations__header-{{ ai_gen_id }} {
    margin-bottom: 20px;
  }

  .ai-cart-recommendations__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    margin: 0;
    color: {{ block.settings.heading_color }};
    text-align: {{ block.settings.heading_alignment }};
  }

  .ai-cart-recommendations__grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.products_per_row }}, 1fr);
    gap: {{ block.settings.grid_gap }}px;
  }

  .ai-cart-recommendations__product-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
    transition: transform 0.2s ease;
  }

  .ai-cart-recommendations__product-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
  }

  .ai-cart-recommendations__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    overflow: hidden;
    border-radius: {{ block.settings.image_border_radius }}px;
    background-color: #f5f5f5;
    margin-bottom: 12px;
  }

  .ai-cart-recommendations__image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-cart-recommendations__product-info-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .ai-cart-recommendations__product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    margin: 0;
    line-height: 1.3;
    color: {{ block.settings.product_title_color }};
  }

  .ai-cart-recommendations__product-price-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_price_size }}px;
    color: {{ block.settings.product_price_color }};
    font-weight: 500;
  }

  .ai-cart-recommendations__add-button-{{ ai_gen_id }} {
    margin-top: 8px;
    padding: 8px 16px;
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 12px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    text-transform: uppercase;
    font-weight: 400;
    letter-spacing: 0.5px;
  }

  .ai-cart-recommendations__add-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
  }

  .ai-cart-recommendations__add-button-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-cart-recommendations__empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 20px;
    color: #999;
    font-size: 14px;
  }

  @media screen and (max-width: 749px) {
    .ai-cart-recommendations__grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.products_per_row_mobile }}, 1fr);
    }

    .ai-cart-recommendations__title-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.heading_size }}px * 0.85);
    }
  }
{% endstyle %}

<cart-recommendations-{{ ai_gen_id }}
  class="ai-cart-recommendations-{{ ai_gen_id }}"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ cart.items.first.product_id }}&limit={{ block.settings.products_to_show }}&intent=related"
  {{ block.shopify_attributes }}
>
  {% if block.settings.heading != blank %}
    <div class="ai-cart-recommendations__header-{{ ai_gen_id }}">
      <h3 class="ai-cart-recommendations__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h3>
    </div>
  {% endif %}

  <div class="ai-cart-recommendations__grid-{{ ai_gen_id }}" data-recommendations-container></div>
</cart-recommendations-{{ ai_gen_id }}>

<script>
  (function() {
    class CartRecommendations{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.container = this.querySelector('[data-recommendations-container]');
      }

      connectedCallback() {
        this.fetchRecommendations();
      }

      async fetchRecommendations() {
        const url = this.dataset.url;
        if (!url) return;

        try {
          const response = await fetch(url);
          const text = await response.text();
          const html = new DOMParser().parseFromString(text, 'text/html');
          const recommendations = html.querySelector('product-recommendations');

          if (recommendations && recommendations.innerHTML.trim().length) {
            this.renderRecommendations(recommendations);
          } else {
            this.renderEmpty();
          }
        } catch (error) {
          console.error('Error fetching recommendations:', error);
          this.renderEmpty();
        }
      }

      renderRecommendations(recommendations) {
        const products = recommendations.querySelectorAll('.product');
        
        if (!products.length) {
          this.renderEmpty();
          return;
        }

        this.container.innerHTML = '';
        
        products.forEach((product) => {
          const productCard = this.createProductCard(product);
          if (productCard) {
            this.container.appendChild(productCard);
          }
        });
      }

      createProductCard(product) {
        const link = product.querySelector('a');
        const image = product.querySelector('img');
        const title = product.querySelector('.product-title');
        const price = product.querySelector('.price');
        
        if (!link || !title) return null;

        const card = document.createElement('div');
        card.className = 'ai-cart-recommendations__product-{{ ai_gen_id }}';

        const imageWrapper = document.createElement('div');
        imageWrapper.className = 'ai-cart-recommendations__image-wrapper-{{ ai_gen_id }}';
        
        if (image) {
          const img = document.createElement('img');
          img.src = image.src;
          img.alt = image.alt || title.textContent;
          img.className = 'ai-cart-recommendations__image-{{ ai_gen_id }}';
          img.loading = 'lazy';
          imageWrapper.appendChild(img);
        }

        const info = document.createElement('div');
        info.className = 'ai-cart-recommendations__product-info-{{ ai_gen_id }}';

        const titleEl = document.createElement('h4');
        titleEl.className = 'ai-cart-recommendations__product-title-{{ ai_gen_id }}';
        titleEl.textContent = title.textContent;

        if (price) {
          const priceEl = document.createElement('div');
          priceEl.className = 'ai-cart-recommendations__product-price-{{ ai_gen_id }}';
          priceEl.textContent = price.textContent;
          info.appendChild(priceEl);
        }

        const button = document.createElement('button');
        button.className = 'ai-cart-recommendations__add-button-{{ ai_gen_id }}';
        button.textContent = '{{ block.settings.button_text }}';
        button.addEventListener('click', (e) => {
          e.preventDefault();
          window.location.href = link.href;
        });

        info.appendChild(titleEl);
        info.appendChild(button);

        card.appendChild(imageWrapper);
        card.appendChild(info);

        return card;
      }

      renderEmpty() {
        if ({{ block.settings.show_empty_state }}) {
          this.container.innerHTML = '<div class="ai-cart-recommendations__empty-{{ ai_gen_id }}">{{ block.settings.empty_state_text }}</div>';
        } else {
          this.style.display = 'none';
        }
      }
    }

    customElements.define('cart-recommendations-{{ ai_gen_id }}', CartRecommendations{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Cart recommendations",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You may also like"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "label": "Products to show",
      "default": 4
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "View"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "products_per_row",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Products per row",
      "default": 2
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "Products per row on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 8,
      "max": 32,
      "step": 4,
      "unit": "px",
      "label": "Grid gap",
      "default": 16
    },
    {
      "type": "range",
      "id": "spacing_top",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Top spacing",
      "default": 24
    },
    {
      "type": "range",
      "id": "spacing_bottom",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Bottom spacing",
      "default": 24
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 18
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 14
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Product price size",
      "default": 14
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 0
    },
    {
      "type": "header",
      "content": "Empty state"
    },
    {
      "type": "checkbox",
      "id": "show_empty_state",
      "label": "Show empty state message",
      "default": false
    },
    {
      "type": "text",
      "id": "empty_state_text",
      "label": "Empty state text",
      "default": "No recommendations available"
    }
  ],
  "presets": [
    {
      "name": "Cart recommendations"
    }
  ]
}
{% endschema %}